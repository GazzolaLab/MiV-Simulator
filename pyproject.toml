[tool.poetry]
name = "miv-simulator"
version = "0.0.3"
description = "Mind-in-Vitro simulator"
readme = "README.md"
authors = []

packages = [
    { include = "miv_simulator", from = "src" },
    { include = "scripts", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
numpy = "^1.22.4"
scipy = "^1.8.1"
mpi4py = "^3.1.5"
h5py = "^3.7.0"
Cython = "^0.29.30"
PyYAML = "^6.0"
sympy = "^1.10.1"
click = "^8.1.3"
networkx = "^2.8.4"
rbf = {git = "https://github.com/frthjf/RBF.git", rev = "master"}
neuroh5 = {git = "https://github.com/iraikov/neuroh5.git"}
future = "^0.18.3"
matplotlib = "^3.6.0"
quantities = "^0.15.0"
pydantic = "^2.3.0"
neuron = "^8.2.3"
distgfs = {version = "^1.1.0", optional = true}


[tool.poetry.dev-dependencies]
black = {extras = ["jupyter"], version = "^23.1.0"}
isort = {extras = ["colors"], version = "^5.12.0"}
mypy = "^0.950"
mypy-extensions = "^0.4.3"
pre-commit = "^2.19.0"
pylint = "^2.13.9"
pytest = "^7.1.2"
pyupgrade = "^2.32.1"
coverage = "^6.3.3"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = {version = "^5.3.0"}
pydata-sphinx-theme = {version = "^0.14.1", allow-prereleases = true}
readthedocs-sphinx-search = {version = "^0.3.1", allow-prereleases = true}
sphinx-autodoc-typehints = {version = "^1.23.0", allow-prereleases = true}
myst-nb = {version = "^0.17.2", allow-prereleases = true}
numpydoc = {version = "^1.6.0", allow-prereleases = true}
sphinx-togglebutton = {version = "^0.3.2", allow-prereleases = true}
sphinx-copybutton = {version = "^0.5.2", allow-prereleases = true}
sphinx-click = {version = "^5.0.1", allow-prereleases = true}
sphinxcontrib-mermaid = {version = "^0.9.2", allow-prereleases = true}

[tool.poetry.scripts]
# Main functions
make-h5types = "scripts.make_h5types:main"
measure-distances = "scripts.measure_distances:main"
generate-distance-connections = "scripts.generate_distance_connections:main"
generate-gapjunctions = "scripts.generate_gapjunctions:main"
generate-input-features = "scripts.generate_input_features:main"
generate-input-spike-trains = "scripts.generate_input_spike_trains:main"
generate-soma-coordinates = "scripts.generate_soma_coordinates:main"
distribute-synapse-locs = "scripts.distribute_synapse_locs:main"
run-network = "scripts.run_network:main"
network-clamp = "scripts.analysis.network_clamp:main_cli"
# Analysis scripts
plot-biophys-cell-tree = "scripts.analysis.plot_biophys_cell_tree:main"
plot-cell-tree = "scripts.analysis.plot_cell_tree:main"
plot-coords-in-volume = "scripts.analysis.plot_coords_in_volume:main"
plot-network-clamp = "scripts.analysis.plot_network_clamp:main"
plot-spike-raster = "scripts.analysis.plot_spike_raster:main"
plot-state = "scripts.analysis.plot_state:main"
plot-single-vertex-dist = "scripts.analysis.plot_single_vertex_dist:main"
plot-spatial-spike-raster = "scripts.analysis.plot_spatial_spike_raster:main"
plot-lfp = "scripts.analysis.plot_lfp:main"
plot-lfp-spectrogram = "scripts.analysis.plot_lfp_spectrogram:main"
#Tools
show-h5types = "scripts.tools.show_h5types:main"
query-cell-attrs = "scripts.tools.query_cell_attrs:main"
check-config = "scripts.tools.check_config:main"
cut-slice = "scripts.tools.cut_slice:main"
sample-cells = "scripts.tools.sample_cells:main"
reposition-trees = "scripts.tools.reposition_trees:main"
optimize-network = "scripts.optimization.optimize_network:main_cli"


[build-system]
requires = ["poetry_core>=1.0.0", "cython"]
build-backend = "poetry.core.masonry.api"

[tool.black]
# https://github.com/psf/black
line-length = 80
target_version = ["py37"]
# include = 'src\/.*\.pyi?$|tests\/.*\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist'
  )/
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
known_typing = "typing,types,typing_extensions,mypy,mypy_extensions"
sections = "FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
include_trailing_comma = true
default_section = "FIRSTPARTY"
multi_line_output = 3
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 80

[tool.pylint.'MESSAGES CONTROL']
disable = "protected-access, import-outside-toplevel, too-few-public-methods"
